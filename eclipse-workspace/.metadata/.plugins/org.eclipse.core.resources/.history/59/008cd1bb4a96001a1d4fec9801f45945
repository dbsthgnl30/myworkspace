package com.naver;

import java.sql.Connection;
import java.sql.DriverManager;

public class TestDAO {

	//1 ->마름모 만든다
	private final String DRIVERNAME = "oracle.jdbc.driver.OracleDriver";  //우클릭 CopyQualifiedName/ 소문자로 되있는건 패키지, UpperCamelCase : 클래스명 
	//2 ->3개 이용connection만든다.(길을만든다)
	private final String URL = "jdbc:oracle:thin:@localhost:1521:xe";  //DataSourceExplorer>New Oracle>우클릭>properties>Driver Properties>connectionURL 복사 //localhost: 내pc 다
	private final String USERNAME = "ca2";  //대문자로 적어도됨
	private final String PASSWORD = "ca2";  //소문자로
	
	public TestDAO() { //생성자
		// (마름모)드라이브 만들기 = 메모리에 올라간다
		try {
			Class.forName(DRIVERNAME);
			System.out.println("드라이버 로딩 성공");
		} catch (ClassNotFoundException e) {
			System.out.println("드라이버 로딩 실패"); //고객한테 줄때는 에러 번호 적기 ->에러 메뉴얼있음
			e.printStackTrace();  //고객들한테 줄때는 빼기 
		}  
	}
	
	
	
	public void selectAll() {
		Connection conn = null;  //절대 멤버 변수or static변수로 connection만들면 안된다. 반드시 지역변수(신뢰성 보장:thread 동기화의 안정화 중요)로!! 
		
		try {
			conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
			System.out.println();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (conn != null) {
					conn.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
		
		
		
		
		
		
		
	}
	
	
	//메서드
	//insert작업
	public void insert(MemberDTO dto) { //1. 화살표 만들고 제거 
		
//		Connection conn = null;    //java.sql.Connection  //무조건 닫아줘야 한다!! conn != null(메모리 할당받았다)		
		//기본구조 : try - catch(e.prt) + finally(여기안에 try catch)(e2.prt)  기본구조 만들고 작업
//		try {
//			
//		} catch (Exception e) {
//			e.printStackTrace();
//			
//		} finally { //try catch 먼저적기!  그안에 if문
//			try {
//				if(conn != null) {
//					conn.close(); //(conn = null일때 close: nullpointerException)
//				}
//			} catch (Exception e2) {
//				e2.printStackTrace();
//			}
//		}
		
		Connection conn = null; //interface로 클래스 안만든다. 유지보수위해 만든 부모 클래스로도 객체 안만든다.
		try {
			conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
			System.out.println("커넥션 연결성공");
		} catch (Exception e) {
			System.out.println("커넥션 연결 실패 ");
			e.printStackTrace();
		} finally {
			try {
				if (conn != null) {
					conn.close();
				}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
		
		
	}
	
	
	
}
